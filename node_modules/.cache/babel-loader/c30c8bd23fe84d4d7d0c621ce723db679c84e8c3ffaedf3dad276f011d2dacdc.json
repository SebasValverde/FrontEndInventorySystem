{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState, useEfffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Swal from 'sweetalert2';\nimport DetalleBusquedaProveedor from \"./DetalleBusquedaProveedor\";\nimport EncabezadoProveedor from \"./EncabezadoProveedor\";\nconst BusquedaProveedor = props => {\n  _s();\n  const [Gestor, setGestor] = useState({\n    Nombre_Proveedor: ''\n  });\n  const navigate = useNavigate();\n  const teclaPresionada = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setGestor({\n      ...Gestor,\n      [name]: value\n    });\n  };\n  const ClickBtnNuevo = () => {\n    props.CambiarIdProveedor(0);\n    navigate(\"/Proveedor/DetalleProveedor\");\n  };\n  const DetalleProveedor = Descripcion => {\n    //console.log(ID_Sucursal);\n    props.CambiarIdProveedor(Descripcion);\n    navigate(\"/Proveedor/DetalleProveedor\");\n  };\n  const ClickBtnDelete = async ID_TipoProducto => {\n    let URL = `http://localhost:${props.ApiPort}/api/ApiTipoProducto/EliminarTipoProducto?ID_TipoProducto=${ID_TipoProducto}`;\n    let Result = await fetch(URL, {\n      method: 'DELETE'\n    }).then(async response => {\n      if (!response.ok) {\n        console.log(\"No Ok - ClickBtnDelete\");\n        throw new Error(response.statusText);\n      }\n      return await response.json();\n    }).catch(error => {\n      console.log(error);\n    });\n    if (Result.Codigo >= 0) {\n      Swal.fire({\n        icon: \"success\",\n        title: \"Sucursal eliminada exitosamente\",\n        showConfirmButton: false,\n        timer: 1500\n      });\n      ClickBtnBuscar();\n    } else {\n      Swal.fire({\n        icon: \"error\",\n        title: \"Oops...\",\n        text: Result.Mensaje\n      });\n      //console.log(Sucursales.Mensaje)\n    }\n  };\n  const ClickBtnBuscar = async () => {\n    let URL = `http://localhost:${props.ApiPort}/api/ApiTipoProducto/ConsultaTipoPNombre?Categoria=${Gestor.Nombre_Categoria}`;\n    let Categorias = await fetch(URL).then(async response => {\n      if (!response.ok) {\n        console.log(\"No Ok - ClickBtnBuscar\");\n        throw new Error(response.statusText);\n      }\n      return await response.json();\n    }).catch(error => {\n      console.log(error);\n    });\n    if (Categorias.Codigo >= 0) {\n      setListaCategorias(Categorias.Contenido);\n    } else {\n      Swal.fire({\n        icon: \"error\",\n        title: \"Oops...\",\n        text: Categorias.Mensaje\n      });\n      //console.log(Sucursales.Mensaje)\n    }\n  };\n  const cargarCategorias = async () => {\n    let URL = `http://localhost:${props.ApiPort}/api/ApiTipoProducto/ConsultaTipoPNombre?Categoria=${Gestor.Nombre_Categoria}`;\n    let Categorias = await fetch(URL).then(async response => {\n      if (!response.ok) {\n        console.log(\"No Ok\");\n        throw new Error(response.statusText);\n      }\n      return await response.json();\n    }).catch(error => {\n      console.log(error);\n    });\n    if (Categorias.Codigo >= 0) {\n      setListaCategorias(Categorias.Contenido);\n    } else {\n      Swal.fire({\n        icon: \"error\",\n        title: \"Oops...\",\n        text: Categorias.Mensaje\n      });\n      //console.log(Categorias.Mensaje)\n    }\n  };\n  onst[(ListaCategorias, setListaCategorias)] = useState([]);\n  useEffect(() => {\n    cargarCategorias();\n    //eslint-disable-next-line\n  }, []);\n};\n_s(BusquedaProveedor, \"dqBbERMGzTLOFqHLWdPEuM54vz4=\", false, function () {\n  return [useNavigate];\n});\n_c = BusquedaProveedor;\nexport default BusquedaProveedor;\nvar _c;\n$RefreshReg$(_c, \"BusquedaProveedor\");","map":{"version":3,"names":["React","useState","useEfffect","useNavigate","Swal","DetalleBusquedaProveedor","EncabezadoProveedor","BusquedaProveedor","props","_s","Gestor","setGestor","Nombre_Proveedor","navigate","teclaPresionada","e","name","value","target","ClickBtnNuevo","CambiarIdProveedor","DetalleProveedor","Descripcion","ClickBtnDelete","ID_TipoProducto","URL","ApiPort","Result","fetch","method","then","response","ok","console","log","Error","statusText","json","catch","error","Codigo","fire","icon","title","showConfirmButton","timer","ClickBtnBuscar","text","Mensaje","Nombre_Categoria","Categorias","setListaCategorias","Contenido","cargarCategorias","onst","ListaCategorias","useEffect","_c","$RefreshReg$"],"sources":["D:/proyectos/FrontEnd_ProyectoWMS/src/Proveedor/BusquedaProveedor.jsx"],"sourcesContent":["import React, {useState,useEfffect} from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Swal from 'sweetalert2'\r\nimport DetalleBusquedaProveedor from \"./DetalleBusquedaProveedor\";\r\nimport EncabezadoProveedor from \"./EncabezadoProveedor\";\r\n\r\nconst BusquedaProveedor=(props)=>{\r\n    const [Gestor,setGestor]= useState({\r\n        Nombre_Proveedor:''\r\n    })\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const teclaPresionada = (e) => {\r\n        const { name, value } = e.target\r\n        setGestor({ ...Gestor, [name]: value })\r\n    }\r\n\r\n    const ClickBtnNuevo = () => {\r\n        props.CambiarIdProveedor(0)\r\n        navigate(\"/Proveedor/DetalleProveedor\")\r\n    }\r\n\r\n    const DetalleProveedor = (Descripcion) => {\r\n        //console.log(ID_Sucursal);\r\n        props.CambiarIdProveedor(Descripcion)\r\n        navigate(\"/Proveedor/DetalleProveedor\")\r\n    }\r\n\r\n    const ClickBtnDelete = async (ID_TipoProducto) => {\r\n        let URL = `http://localhost:${props.ApiPort}/api/ApiTipoProducto/EliminarTipoProducto?ID_TipoProducto=${ID_TipoProducto}`;\r\n        let Result = await fetch(URL, {\r\n            method: 'DELETE'\r\n        }).then(async response => {\r\n            if (!response.ok) {\r\n                console.log(\"No Ok - ClickBtnDelete\")\r\n                throw new Error(response.statusText)\r\n            }\r\n            return await response.json()\r\n        }).catch(error => {\r\n            console.log(error)\r\n        })\r\n        if (Result.Codigo >= 0) {\r\n            Swal.fire({\r\n                icon: \"success\",\r\n                title: \"Sucursal eliminada exitosamente\",\r\n                showConfirmButton: false,\r\n                timer: 1500\r\n              });\r\n              ClickBtnBuscar()\r\n        }\r\n        else {\r\n            Swal.fire({\r\n                icon: \"error\",\r\n                title: \"Oops...\",\r\n                text: Result.Mensaje\r\n              });\r\n            //console.log(Sucursales.Mensaje)\r\n        }\r\n    }\r\n\r\n    const ClickBtnBuscar = async () => {\r\n        let URL = `http://localhost:${props.ApiPort}/api/ApiTipoProducto/ConsultaTipoPNombre?Categoria=${Gestor.Nombre_Categoria}`;\r\n        let Categorias = await fetch(URL).then(async response => {\r\n            if (!response.ok) {\r\n                console.log(\"No Ok - ClickBtnBuscar\")\r\n                throw new Error(response.statusText)\r\n            }\r\n            return await response.json()\r\n        }).catch(error => {\r\n            console.log(error)\r\n        })\r\n        if (Categorias.Codigo >= 0) {\r\n            setListaCategorias(Categorias.Contenido)\r\n        }\r\n        else {\r\n            Swal.fire({\r\n                icon: \"error\",\r\n                title: \"Oops...\",\r\n                text: Categorias.Mensaje\r\n              });\r\n            //console.log(Sucursales.Mensaje)\r\n        }       \r\n    }\r\n\r\n    const cargarCategorias = async () => {\r\n        let URL = `http://localhost:${props.ApiPort}/api/ApiTipoProducto/ConsultaTipoPNombre?Categoria=${Gestor.Nombre_Categoria}`\r\n        let Categorias = await fetch(URL).then(async response => {\r\n            if (!response.ok) {\r\n                console.log(\"No Ok\")\r\n                throw new Error(response.statusText)\r\n            }\r\n            return await response.json()\r\n        }).catch(error => {\r\n            console.log(error)\r\n        })\r\n        if (Categorias.Codigo >= 0) {\r\n            setListaCategorias(Categorias.Contenido)\r\n        }\r\n        else {\r\n            Swal.fire({\r\n                icon: \"error\",\r\n                title: \"Oops...\",\r\n                text: Categorias.Mensaje\r\n              });\r\n            //console.log(Categorias.Mensaje)\r\n        }\r\n    }\r\n\r\n    onst [ListaCategorias,setListaCategorias]=useState([])\r\n\r\n    useEffect(() => {\r\n        cargarCategorias();\r\n        //eslint-disable-next-line\r\n    }, [])\r\n\r\n\r\n}\r\nexport default BusquedaProveedor;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}