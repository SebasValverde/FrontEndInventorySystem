{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Swal from 'sweetalert2';\nconst DetalleProveedor = props => {\n  _s();\n  const navigate = useNavigate();\n  const [Proveedor, setProveedor] = useState({\n    ID_Proveedor: 0,\n    Nombre_Proveedor: '',\n    Telefono: 0,\n    Direccion: ''\n  });\n  const CambioValor = e => {\n    const {\n      name,\n      type,\n      value,\n      checked\n    } = e.target;\n    setCategoria({\n      ...Proveedor,\n      [name]: type === 'checkbox' ? checked : value\n    });\n  };\n  const tituloTexto = props.IdProveedorActual > 0 ? \"Editar Proveedor producto\" : \"Nueva Proveedor producto\";\n  const ClickBtnGuardar = async () => {\n    let URL = props.IdProveedorActual === 0 ? `http://localhost:${props.ApiPort}/api/ApiProveedor/InsertarProveedor` : `http://localhost:${props.ApiPort}/api/ApiProveedor/ModificarProveedor`;\n    let Method = props.IdProveedorActual === 0 ? \"POST\" : \"PATCH\";\n    let Result = await fetch(URL, {\n      \"method\": Method,\n      \"headers\": {\n        \"content-type\": \"application/json\",\n        \"accept\": \"application/json\",\n        \"Access-Control-Allow-Origin\": \"*\"\n      },\n      \"body\": JSON.stringify(Categoria)\n    }).then(async response => {\n      if (!response.ok) {\n        console.log(\"No Ok\");\n        throw new Error(response.statusText);\n      }\n      return await response.json();\n    }).catch(error => {\n      console.log(error);\n    });\n    if (Result.Codigo >= 0) {\n      Swal.fire({\n        icon: \"success\",\n        title: \"Información guardada exitosamente\",\n        showConfirmButton: false,\n        timer: 1500\n      });\n      navigate(\"/Proveedor/BusquedaProveedor\");\n    } else {\n      Swal.fire({\n        icon: \"error\",\n        title: \"Oops...\",\n        text: Result.Mensaje\n      });\n      //console.log(Result.Mensaje)\n    }\n  };\n  const cargandoFormulario = async () => {\n    if (props.IdProveedorActual > 0) {\n      let URL = `http://localhost:${props.ApiPort}/api/ApiTipoProducto/ConsultaTipoProductoxID?ID_TipoProducto=${props.IdCategoriaActual}`;\n      let Proveedores = await fetch(URL).then(async response => {\n        if (!response.ok) {\n          console.log(\"No Ok\");\n          throw new Error(response.statusText);\n        }\n        return await response.json();\n      }).catch(error => {\n        console.log(error);\n      });\n      if (Proveedores.Codigo >= 0) {\n        setCategoria(Proveedores.Contenido[0]);\n      } else {\n        Swal.fire({\n          icon: \"error\",\n          title: \"Oops...\",\n          text: Proveedores.Mensaje\n        });\n        //console.log(Sucursales.Mensaje)\n      }\n    }\n  };\n  useEffect(() => {\n    cargandoFormulario();\n    //eslint-disable-next-line\n  }, []);\n};\n_s(DetalleProveedor, \"i6VJKFim/Q9aTVrqKJLcnHFvGBA=\", false, function () {\n  return [useNavigate];\n});\n_c = DetalleProveedor;\nexport default DetalleProveedor;\nvar _c;\n$RefreshReg$(_c, \"DetalleProveedor\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","Swal","DetalleProveedor","props","_s","navigate","Proveedor","setProveedor","ID_Proveedor","Nombre_Proveedor","Telefono","Direccion","CambioValor","e","name","type","value","checked","target","setCategoria","tituloTexto","IdProveedorActual","ClickBtnGuardar","URL","ApiPort","Method","Result","fetch","JSON","stringify","Categoria","then","response","ok","console","log","Error","statusText","json","catch","error","Codigo","fire","icon","title","showConfirmButton","timer","text","Mensaje","cargandoFormulario","IdCategoriaActual","Proveedores","Contenido","_c","$RefreshReg$"],"sources":["D:/proyectos/FrontEnd_ProyectoWMS/src/Proveedor/DetalleProveedor.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\"\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Swal from 'sweetalert2'\r\n\r\nconst DetalleProveedor = (props) => {\r\n    const navigate = useNavigate();\r\n    const [Proveedor, setProveedor] = useState({\r\n        ID_Proveedor: 0,\r\n        Nombre_Proveedor: '',\r\n        Telefono:0,\r\n        Direccion:''\r\n    })\r\n\r\n    const CambioValor = (e) => {\r\n        const { name, type, value, checked } = e.target;\r\n        setCategoria({\r\n            ...Proveedor,\r\n            [name]: type === 'checkbox' ? checked : value\r\n        });\r\n    }\r\n\r\n    const tituloTexto = props.IdProveedorActual > 0 ? \"Editar Proveedor producto\" : \"Nueva Proveedor producto\";\r\n\r\n    const ClickBtnGuardar = async() => {\r\n        let URL= props.IdProveedorActual===0 ? `http://localhost:${props.ApiPort}/api/ApiProveedor/InsertarProveedor` : `http://localhost:${props.ApiPort}/api/ApiProveedor/ModificarProveedor`\r\n        let Method = props.IdProveedorActual===0 ? \"POST\" : \"PATCH\"\r\n        let Result= await fetch(URL,{\r\n            \"method\":Method,\r\n            \"headers\":{\r\n                \"content-type\":\"application/json\",\r\n                \"accept\":\"application/json\",\r\n                \"Access-Control-Allow-Origin\":\"*\"\r\n            },\r\n            \"body\": JSON.stringify(Categoria)\r\n        }).then(async response =>{\r\n            if(!response.ok){\r\n                console.log(\"No Ok\")\r\n                throw new Error (response.statusText)\r\n            }\r\n            return await response.json()\r\n        }).catch(error=>{\r\n            console.log(error)\r\n        })\r\n        \r\n        if(Result.Codigo>=0){\r\n            Swal.fire({\r\n                icon: \"success\",\r\n                title: \"Información guardada exitosamente\",\r\n                showConfirmButton: false,\r\n                timer: 1500\r\n              });\r\n            navigate(\"/Proveedor/BusquedaProveedor\")\r\n        }\r\n        else{\r\n            Swal.fire({\r\n                icon: \"error\",\r\n                title: \"Oops...\",\r\n                text: Result.Mensaje\r\n              });\r\n            //console.log(Result.Mensaje)\r\n        }\r\n    }\r\n\r\n    const cargandoFormulario = async () => {\r\n        if (props.IdProveedorActual > 0) {\r\n            let URL = `http://localhost:${props.ApiPort}/api/ApiTipoProducto/ConsultaTipoProductoxID?ID_TipoProducto=${props.IdCategoriaActual}`\r\n            let Proveedores = await fetch(URL).then(async response => {\r\n                if (!response.ok) {\r\n                    console.log(\"No Ok\")\r\n                    throw new Error(response.statusText)\r\n                }\r\n                return await response.json()\r\n            }).catch(error => {\r\n                console.log(error)\r\n            })\r\n            if (Proveedores.Codigo >= 0) {\r\n                setCategoria(Proveedores.Contenido[0])\r\n            }\r\n            else {\r\n                Swal.fire({\r\n                    icon: \"error\",\r\n                    title: \"Oops...\",\r\n                    text: Proveedores.Mensaje\r\n                  });\r\n                //console.log(Sucursales.Mensaje)\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        cargandoFormulario();\r\n        //eslint-disable-next-line\r\n    }, [])\r\n\r\n\r\n\r\n\r\n}\r\nexport default DetalleProveedor;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}