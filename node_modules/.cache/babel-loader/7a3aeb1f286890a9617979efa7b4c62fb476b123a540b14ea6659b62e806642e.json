{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sergio Monge\\\\Desktop\\\\FrontEnd_ProyectoWMS\\\\src\\\\Sucursales\\\\BusquedaSucursal.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport EncabezadoSucursal from \"./EncabezadoSucursal\";\nimport DetalleBusquedaSucursal from \"./DetalleBusquedaSucursal\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst BusquedaSucursal = props => {\n  _s();\n  const [Gestor, setGestor] = useState({\n    Nombre_Sucursal: '',\n    Descripcion: ''\n  });\n  const navigate = useNavigate();\n  const teclaPresionada = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    console.log(name);\n    setGestor({\n      ...Gestor,\n      [name]: value\n    });\n  };\n  const ClickBtnNuevo = () => {\n    props.CambiarIdSucursal(0);\n    navigate(\"/Sucursales/DetalleSucursal\");\n  };\n  const DetallesSucursal = ID_Sucursal => {\n    console.log(ID_Sucursal);\n    props.CambiarIdSucursal(ID_Sucursal);\n    navigate(\"/Sucursales/DetalleSucursal\");\n  };\n  const ClickBtnDelete = () => {\n    console.log('Se intentó eliminar');\n  };\n  const ClickBtnBuscar = async () => {\n    let URL = `http://localhost:${props.ApiPort}/api/ApiSucursal/ConsultaSucursalesNombreDescripcion?Nombre_Sucursal=${Gestor.Nombre_Sucursal}&Descripcion=${Gestor.Descripcion}`;\n    let Sucursales = await fetch(URL).then(async response => {\n      if (!response.ok) {\n        console.log(\"No Ok\");\n        throw new Error(response.statusText);\n      }\n      return await response.json();\n    }).catch(error => {\n      console.log(error);\n    });\n    if (Sucursales.Codigo >= 0) {\n      setListaSucursales(Sucursales.Contenido);\n    } else {\n      console.log(Sucursales.Mensaje);\n    }\n  };\n  const [ListaSucursales, setListaSucursales] = useState([]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(EncabezadoSucursal, {\n      ClickBtnNuevo: ClickBtnNuevo,\n      ClickBtnBuscar: ClickBtnBuscar,\n      teclaPresionada: teclaPresionada,\n      Gestor: Gestor\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(DetalleBusquedaSucursal, {\n      ListaSucursales: ListaSucursales,\n      DetallesSucursal: DetallesSucursal,\n      ClickBtnDelete: ClickBtnDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(BusquedaSucursal, \"GnsyA5KJUJsNQNWPFWqPhw7QFVo=\", false, function () {\n  return [useNavigate];\n});\n_c = BusquedaSucursal;\nexport default BusquedaSucursal;\nvar _c;\n$RefreshReg$(_c, \"BusquedaSucursal\");","map":{"version":3,"names":["React","useState","EncabezadoSucursal","DetalleBusquedaSucursal","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","BusquedaSucursal","props","_s","Gestor","setGestor","Nombre_Sucursal","Descripcion","navigate","teclaPresionada","e","name","value","target","console","log","ClickBtnNuevo","CambiarIdSucursal","DetallesSucursal","ID_Sucursal","ClickBtnDelete","ClickBtnBuscar","URL","ApiPort","Sucursales","fetch","then","response","ok","Error","statusText","json","catch","error","Codigo","setListaSucursales","Contenido","Mensaje","ListaSucursales","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Sergio Monge/Desktop/FrontEnd_ProyectoWMS/src/Sucursales/BusquedaSucursal.jsx"],"sourcesContent":["import React,{useState} from \"react\";\r\nimport EncabezadoSucursal from \"./EncabezadoSucursal\";\r\nimport DetalleBusquedaSucursal from \"./DetalleBusquedaSucursal\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst BusquedaSucursal=(props)=>{  \r\n    const [Gestor,setGestor]= useState({\r\n        Nombre_Sucursal:'',\r\n        Descripcion:''\r\n    })\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const teclaPresionada = (e) => {\r\n        const { name, value } = e.target\r\n        console.log(name)\r\n        setGestor({ ...Gestor, [name]: value })\r\n    }\r\n\r\n    const ClickBtnNuevo = () => {\r\n        props.CambiarIdSucursal(0)\r\n        navigate(\"/Sucursales/DetalleSucursal\")\r\n    }\r\n\r\n    const DetallesSucursal = (ID_Sucursal) => {\r\n        console.log(ID_Sucursal);\r\n        props.CambiarIdSucursal(ID_Sucursal)\r\n        navigate(\"/Sucursales/DetalleSucursal\")\r\n    }\r\n\r\n    const ClickBtnDelete = () => {\r\n        console.log('Se intentó eliminar');\r\n    }\r\n\r\n    const ClickBtnBuscar = async () => {\r\n        let URL = `http://localhost:${props.ApiPort}/api/ApiSucursal/ConsultaSucursalesNombreDescripcion?Nombre_Sucursal=${Gestor.Nombre_Sucursal}&Descripcion=${Gestor.Descripcion}`;\r\n        let Sucursales = await fetch(URL).then(async response => {\r\n            if (!response.ok) {\r\n                console.log(\"No Ok\")\r\n                throw new Error(response.statusText)\r\n            }\r\n            return await response.json()\r\n        }).catch(error => {\r\n            console.log(error)\r\n        })\r\n        if (Sucursales.Codigo >= 0) {\r\n            setListaSucursales(Sucursales.Contenido)\r\n        }\r\n        else {\r\n            console.log(Sucursales.Mensaje)\r\n        }\r\n        \r\n    }\r\n\r\n    const [ListaSucursales,setListaSucursales]=useState([])\r\n\r\n    return <>\r\n        <EncabezadoSucursal ClickBtnNuevo={ClickBtnNuevo} \r\n        ClickBtnBuscar={ClickBtnBuscar}\r\n        teclaPresionada={teclaPresionada}\r\n        Gestor={Gestor} />\r\n        <DetalleBusquedaSucursal ListaSucursales={ListaSucursales} \r\n        DetallesSucursal={DetallesSucursal}\r\n        ClickBtnDelete={ClickBtnDelete}/>\r\n    </>\r\n}\r\nexport default BusquedaSucursal;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}